<?php
	require_once("Configuration.php");
	require_once("Connection.php");

	class GenerationTools
	{
		/**
		 * [$connection description]
		 * @var [type]
		 */
		private static $connection;

		public static function generateModels()
		{
			$returnedArray = array();
			$tables = GenerationTools::getTablesNames();
			$returnedArray[0] = count($tables);
			$returnedArray[1] = 0;

			foreach($tables as $key => $tableName)
			{
				$tables[$tableName] = (GenerationTools::getColumnsNamesFromTable($tableName));
				$returnedArray[1] += count($tables[$tableName]);
				unset($tables[$key]);
			}
			
			foreach ($tables as $tableName => $fields)
			{
				$returnedArray[3][] = $fields;
				$attributesList = "";
				$functionsList = "";
				foreach ($fields as $field)
				{
					$attributesList .= self::getAttributeFromField($field[0], $field[1]);
					$functionsList .= self::getGetterFromField($field[0], $field[1]);
					$functionsList .= self::getSetterFromField($field[0], $field[1]);
				}
				
				$content = "<?php\n\trequire_once('Model.php');\n\n\t/** AutoGenerated by MyMVC GenerationTools **/\n\tclass ".ucwords($tableName)." extends Model\n\t{".$attributesList."\n\t".$functionsList."\t}\n?>";
				$fp = fopen("models/".ucwords(strtolower($tableName)).".php", "w");
				fputs($fp, $content);
				fclose($fp);
			}
			$returnedArray[2] = $tables;
			return $returnedArray;
		}

		private static function getTablesNames()
		{	
			self::$connection = Connection::getInstance();

			$req = "SHOW TABLES FROM ".DBName;
			$data = self::$connection->query($req);

			$results = array();
			$i = 0;

			if(!is_object($data))
				return array();
			foreach ($data as $row)
				$results[] = $row['Tables_in_'.DBName];

			return $results;
		}

		private static function getColumnsNamesFromTable($tableName)
		{
			self::$connection = Connection::getInstance();

			$req = "SHOW FIELDS FROM ".DBName.".".$tableName;
			$data = self::$connection->query($req);

			$results = array();
			$i = 0;

			if(!is_object($data))
				return array();
			foreach ($data as $row)
			{
				$tmp = array();
				$tmp[0] = $row['Field'];
				$tmp[1] = $row['Type'];
				$results[] = $tmp;
			}

			return $results;
		}

		private static function getAttributeFromField($fieldName, $fieldType)
		{
			$attributeComment = "\n\t\t/** @var ".$fieldType." **/";
			$atributeContent = "\n\t\tprotected $".$fieldName.";\n";
			return $attributeComment.$atributeContent;
		}

		private static function getGetterFromField($fieldName, $fieldType)
		{
			$getterComment = "\n\t\t/**\n\t\t * get".$fieldName." Get the ".$fieldName." attribute \n\t\t * @return ".$fieldType." The content of the ".$fieldName." attribute\n\t\t */";
			$getterContent = "\n\t\tpublic function get".ucwords($fieldName)."()\n\t\t{\n\t\t\treturn \$this->".$fieldName.";\n\t\t}\n";
			return $getterComment.$getterContent;
		}

		private static function getSetterFromField($fieldName, $fieldType)
		{
			$setterComment = "\n\t\t/**\n\t\t * set".$fieldName." Define the ".$fieldName." attribute\n\t\t * @param ".$fieldType." The new content for the ".$fieldName." attribute\n\t\t */";
			$setterContent = "\n\t\tpublic function set".ucwords($fieldName)."(\$".$fieldName.")\n\t\t{\n\t\t";
			
			// Gestion des contraintes de type
			$match = array();
			if(preg_match("/int\((.*)\)/", $fieldType, $match))
			{
				$setterContent .= "\tif(is_int(\$".$fieldName.") && strlen(str_replace(\"-\", \"\", $".$fieldName.")) <= ".$match[1].")\n\t\t\t";
			}
			elseif(preg_match("/varchar\((.*)\)/", $fieldType, $match))
			{
				$setterContent .= "\tif(is_string(\$".$fieldName.") && strlen(\$".$fieldName.") <= ".$match[1].")\n\t\t\t";
			}
			elseif(preg_match("/decimal\((.*)\)/", $fieldType, $match))
			{
				$setterContent .= "\tif(is_double(\$".$fieldName."))\n\t\t\t";
			}
			
			$setterContent .= "\t\$this->".$fieldName." = \$".$fieldName.";\n\t\t}\n";
			return $setterComment.$setterContent;
		}
	}

	$returnedArray = GenerationTools::generateModels();
?>

<html>
	<head>
		<title>MyMVC::GenerationTools</title>
		<meta charset="utf-8">
	</head>
	<body>
		<?php
			echo "<h1>Génération terminée !</h1>";
			echo "<h2>Détails du traitement : </h2>";
			echo "<ul>";
			foreach ($returnedArray[2] as $tableName => $fieldsList)
			{
				echo "<li>";
				echo "<h3>".ucwords(DBName).".".ucwords($tableName)."</h3>";
				echo "<ul>";
				foreach ($fieldsList as $value)
				{
					echo "<li>$value[0] : <em>$value[1]</em></li>";
				}
				echo "</ul>";
			}
			echo "</ul>";
;
			echo "<h4>$returnedArray[0] fichiers générés dans le dossier <em>models</em></h4>";
		?>
	</body>
	</html>